[{"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/index.js":"1","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/App.js":"2","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/components/Navigation/Navigation.js":"3","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/hooks/useTitle.js":"4","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/About.js":"5","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/components/Post/Post.js":"6","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/components/button/PostButton.js":"7","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/hooks/useConfirm.js":"8","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/post/Posts.js":"9","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/post/DetailPost.js":"10","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/post/CreatePost.js":"11","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/post/UpdatePost.js":"12","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/context/PostsContext.js":"13","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/context/PostsPageInfoContext.js":"14"},{"size":199,"mtime":1612276125383,"results":"15","hashOfConfig":"16"},{"size":1393,"mtime":1612276347058,"results":"17","hashOfConfig":"16"},{"size":1684,"mtime":1612277950400,"results":"18","hashOfConfig":"16"},{"size":374,"mtime":1611740133937,"results":"19","hashOfConfig":"16"},{"size":187,"mtime":1611897710802,"results":"20","hashOfConfig":"16"},{"size":653,"mtime":1611904782752,"results":"21","hashOfConfig":"16"},{"size":791,"mtime":1612091128153,"results":"22","hashOfConfig":"16"},{"size":404,"mtime":1612077389184,"results":"23","hashOfConfig":"16"},{"size":3830,"mtime":1612278496246,"results":"24","hashOfConfig":"16"},{"size":2289,"mtime":1612237962512,"results":"25","hashOfConfig":"16"},{"size":2183,"mtime":1612237946988,"results":"26","hashOfConfig":"16"},{"size":2840,"mtime":1612237928023,"results":"27","hashOfConfig":"16"},{"size":86,"mtime":1612276066981,"results":"28","hashOfConfig":"16"},{"size":94,"mtime":1612276069179,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"125yvjj",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/index.js",[],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/App.js",[],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/components/Navigation/Navigation.js",["61","62"],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/hooks/useTitle.js",[],["63","64"],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/About.js",[],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/components/Post/Post.js",[],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/components/button/PostButton.js",[],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/hooks/useConfirm.js",[],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/post/Posts.js",["65","66"],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/post/DetailPost.js",["67"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport useTitle from '../../hooks/useTitle';\nimport styles from \"./DetailPost.module.scss\";\nimport useConfirm from '../../hooks/useConfirm';\nimport { Viewer } from '@toast-ui/react-editor';\n\nconst DetailPost = ({ match, history }) => {\n  const postId = match.params.id;\n  const [post, setPost] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const deletePost = useConfirm(\n    \"삭제하시겠습니까?\",  \n    async() => {\n      await axios.delete(`https://angelhack-anywhere-library.herokuapp.com/v1/api/posts/${postId}`)\n      .then((response) => {\n        alert(\"삭제가 완료되었습니다.\");\n        document.location.href='/posts';\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    },\n    () => alert(\"삭제가 취소되었습니다.\")\n  );\n\n  const updatePost = () => history.push(`/posts/${postId}/edit`);\n\n  \n  const getPost = async() => {\n    await axios.get(`https://angelhack-anywhere-library.herokuapp.com/v1/api/posts/${postId}`)\n      .then((response) => {\n        const data = response.data;\n  \n        setPost(data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  \n  useEffect(() => {\n    getPost();\n  }, [])\n\n  useTitle('Post');\n\n  return (\n    <div className={styles.post__detail}>\n      {isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <div className={styles.post__detail__container}>\n            <div className={styles.post__title}>\n              <h1>{post.title}</h1>\n            </div>\n            <div className={styles.post__info}>\n              <div className={styles.post__info__column}>\n                <h3>{post.createdDate}</h3>\n              </div>\n              <div className={styles.post__info__column}>\n                <h3 onClick={updatePost}>수정</h3>\n                <h3 onClick={deletePost}>삭제</h3>\n                \n              </div>\n            </div>\n            <div className={styles.post__content}>\n              <Viewer \n                initialValue={post.content} >\n              </Viewer>\n              \n            </div>\n          </div>\n        ) \n        }\n\n    </div>\n    \n  )\n}\n\n\nexport default DetailPost;","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/post/CreatePost.js",[],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/routes/post/UpdatePost.js",["68"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport useTitle from '../../hooks/useTitle';\nimport styles from \"./CreatePost.module.scss\";\nimport useConfirm from '../../hooks/useConfirm';\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport { Editor } from '@toast-ui/react-editor';\nimport PostButton from '../../components/button/PostButton';\n\nconst UpdatePost = ({match}) => {\n  const postId = match.params.id;\n  const [title, setTitle] = useState([]);\n  const [content, setContent] = useState([]);\n  const [editorRef] = useState(React.createRef());\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getPost = async() => {\n    await axios.get(`/v1/api/posts/${postId}`)\n      .then((response) => {\n        const data = response.data;\n  \n        setTitle(data.title);\n        setContent(data.content);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  \n  useEffect(() => {\n    getPost();\n  }, [])\n\n  const updatePost = async() => {\n    await axios.put(`https://angelhack-anywhere-library.herokuapp.com/v1/api/posts/${postId}`, {\n      title: title,\n      content: editorRef.current.getInstance().getHtml()\n    })\n    .then((response) => {\n      document.location.href=`/posts/${postId}`;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n  const cancleClick = useConfirm(\"작성중인 글은 저장되지않습니다.\\n정말 나가시겠습니까?\", () => document.location.href='/posts');\n  const titleChange = (e) => {\n    setTitle(e.target.value);\n  }\n\n  useTitle('Create Post');\n\n  return (\n    <div className={styles.post__create}>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (   \n        <div className={styles.post__create__container}>\n          <div className={styles.post__create__title}>\n            <input onChange={titleChange} id=\"post__title\" type=\"text\" placeholder=\"제목을 입력하세요\" value={title}/>  \n          </div>\n          <div className={styles.post__create__content}>\n            <Editor\n              previewStyle=\"vertical\"\n              height=\"600px\"\n              initialEditType=\"wysiwyg\"\n              placeholder=\"글을 작성해주세요\"\n              initialValue={content}\n              ref={editorRef}\n            />\n          </div>\n          <div className={styles.post__create__bottom}>\n            <PostButton onClick={updatePost} content=\"수정하기\"/>\n            <PostButton\n              onClick={cancleClick}\n              content=\"취소하기\" \n              color=\"black\" \n              backgroundColor=\"white\" \n              borderColor=\"rgba(0, 0, 0, 0.2)\"\n            />\n            \n          </div>\n        \n        </div>\n      )}\n      \n    </div>\n    \n  )\n}\n\n\nexport default UpdatePost;","/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/context/PostsContext.js",[],"/Users/choeminseong/IdeaProjects/ssu/spring-react/frontend/src/context/PostsPageInfoContext.js",[],{"ruleId":"69","severity":1,"message":"70","line":8,"column":10,"nodeType":"71","messageId":"72","endLine":8,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":8,"column":15,"nodeType":"71","messageId":"72","endLine":8,"endColumn":21},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"69","severity":1,"message":"78","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":43,"column":6,"nodeType":"81","endLine":43,"endColumn":23,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":46,"column":6,"nodeType":"81","endLine":46,"endColumn":8,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"83","line":34,"column":6,"nodeType":"81","endLine":34,"endColumn":8,"suggestions":"85"},"no-unused-vars","'url' is assigned a value but never used.","Identifier","unusedVar","'setUrl' is assigned a value but never used.","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPosts' and 'initState'. Either include them or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has a missing dependency: 'getPost'. Either include it or remove the dependency array.",["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"93","fix":"95"},"Update the dependencies array to be: [getPosts, initState, location.search]",{"range":"96","text":"97"},"Update the dependencies array to be: [getPost]",{"range":"98","text":"99"},{"range":"100","text":"99"},[1718,1735],"[getPosts, initState, location.search]",[1265,1267],"[getPost]",[1041,1043]]